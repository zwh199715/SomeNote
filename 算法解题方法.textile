方法1:滑动窗口：

经典问题是找出字符串中最长不重复子串
例如在java 中我们这样做：
HashSet<E> set = new HashSet<E>(); // new 一个HashSet作为我们的容器来辅助判断子串是否相等

int rk=-1; 设置一个变量rk表示右边的指针 初始值为-1 说明我们的窗口初始里面没有内容

假设字符串为s,长度为n

for(int i=0;i<n;i++){
	if(i != 0){
		set.remove(s.charAt(i+1)); // i相当于左边的指针  每次i++的时候 即是从字符串的左边移除掉一个字符，即将这个字符移除窗口
	}
	while(rk+1 < n && !set.contains(s.charAt(rk+1))){
		//判断右指针的下一位字符在窗口中有没有存在 如果不存在
		set.add(s.charAt(rk+1)); //将这个字符加进窗口
		rk++;//右指针向前移动一位
	}

	循环结束的时候要么右指针已经到字符串末尾 或者字符串的下一位与窗口中的字符有重复
	此时记录下来左指针与右指针的字符串长度与之前的长度做对比 更新成较大的值
	Math.max(ans,rk-i+1);
}
当整个循环结束的时候  返回ans即为最长的不重复子串
整个过程中最重要的是始终让窗口中的字符串是不重复的，这样在窗口中存储的最长的那个就是我们需要的结果。
--------------------------------------------------------------------------------------------------------
